get index
 Input: none
 Output:$(MAIL)/questions.term
Eshell V5.9  (abort with ^G)
1> Written: /Users/joe/.sherlock/mails/questions.html
1> Written: /Users/joe/.sherlock/mails/questions.term
1> Years = ["1997","1998","1999","2000","2001","2002","2003","2004","2005",
         "2006","2007","2008","2009","2010","2011","2012","2013"]
1> Parsing mails for: 2009
1> Parsing: 2009-January.txt.gz
1> Parsing: 2009-February.txt.gz
1> Parsing: 2009-March.txt.gz
1> Parsing: 2009-April.txt.gz
1> Parsing: 2009-May.txt.gz
1> Parsing: 2009-June.txt.gz
1> Parsing: 2009-July.txt.gz
1> Parsing: 2009-August.txt.gz
1> Parsing: 2009-September.txt.gz
1> Parsing: 2009-October.txt.gz
1> Parsing: 2009-November.txt.gz
1> Parsing: 2009-December.txt.gz
1> Written: /Users/joe/.sherlock/mails/2009/parsed.bin
1> Year: 2009 #entries = 7906 size =   3.56 Megabytes average =450.34 bytes/entry
1> Computing mail IDF for: 2009
1> Adding synthetic keywords for:2009
1> Written binary store:/Users/joe/.sherlock/mails/2009/mails.bin
1> Written listing:"/Users/joe/.sherlock/mails/2009/mails.list"
1> 946:  UBF and JSON Protocols
1> Query took:24 ms #results=1
1> ----
ID: 946
Date: Sun, 15 Feb 2009 12:39:10 +0100
From: Joe Armstrong
Subject: UBF and JSON Protocols
For a long time I have been interested in describing protocols. In
2002 I published a contract system called UBF for defining protocols.
This scheme was never widely adopted - perhaps it was just to
strange...

I have revised UBF and recast it in a form which I call JSON Protocols
- since JSON is widely implemented, this method of described protocols
might be more acceptable...

Read the remainder of this on

http://armstrongonsoftware.blogspot.com/2009/02/json-protocols-part-1.html

/Joe Armstrong


1> Searching for=[<<"idf">>,<<"word">>,<<"remove">>,<<"words">>,<<"tab">>,
               <<"duplicates">>,<<"ets">>,<<"keywords">>,<<"bin">>,<<"skip">>,
               <<"file">>,<<"index">>,<<"binary">>,<<"frequency">>,<<"dict">>]
1> 7260 : 0.27 Word Frequency Analysis
1> 7252 : 0.27 Word Frequency Analysis
1> 7651 : 0.18 tab completion and word killing in the shell
1> 4297 : 0.17 ets vs process-based registry + local vs global dispatch
1> 5324 : 0.16 ets memory usage
1> 5325 : 0.15 ets memory usage
1> 1917 : 0.14 A couple of design questions
1> 1860 : 0.12 leex and yecc spotting double newline
1> 5361 : 0.11 dict slower than ets?
1> 1991 : 0.11 Extending term external format to support	shared substructures
1> ----
ID: 7260
Date: Fri, 04 Dec 2009 17:57:03 +0100
From: =?ISO-8859-15?Q?Johann_H=F6chtl?=
Subject: Word Frequency Analysis
Hello!

I need to compute a word frequency analysis of a fairly large corpus. At
present I discovered the disco database
http://discoproject.org/

which seems to include a tf-idf indexer. What about couchdb? I found an
article that it fails rather quickly (somewhere between 100 and 1000
wikipedia text pages)
http://knuthellan.com/2009/07/09/the-couchdb-indexer-lightweight-search-engine-in-hours/

Are there other erlang frameworks or can somebody provide me with a hint
to another DBM system which naturally supports wortd frequncy analysis?

Thank you!

Regards,
  Johann

1> 